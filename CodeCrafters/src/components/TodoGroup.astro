---
// TodoGroup.astro
import { IoAdd } from "react-icons/io5";
import { MdCircle } from "react-icons/md";

type Props = {
  id: string;
  title: string;
  color: string;
};

const { id, title, color } = Astro.props;
---

<div class="board column">
  <div class=`${id} column`>
    <div class="header-board">
      <div class="header-title">
        <MdCircle size={16} color={color} />
        <p>{title}</p>
      </div>
      <span class="add" id="add-todo">
        <IoAdd size={32} />
      </span>
    </div>
    <div
      id={id}
      class=`column-add ${id}`
      ondrop="dropMe(event)"
      ondragover="allowDrop(event)"
    >
    </div>
  </div>
</div>

<script>
  import { addEventListeners, TodoCard } from "./TodoCard";
  import { TodoContext } from "@contexts/todoContext";
  import { TodoService } from "@services/todoService";
  import { handleCreate } from "@utils/handleCreate";
  import { TodoStatusType } from "@utils/todoStatusType";
  import type { Status } from "src/types/todo";

  document.addEventListener("DOMContentLoaded", () => {
    const todoContext = TodoContext.getInstance();
    const todoService = new TodoService();

    const todoList = document.getElementById("todo-add");
    const inProgress = document.getElementById("in-progress");
    const finish = document.getElementById("todo-done");

    function renderTodos() {
      if (!todoList || !inProgress || !finish) return;

      todoList.innerHTML = "";
      inProgress.innerHTML = "";
      finish.innerHTML = "";

      const todos = todoContext.getTodos();
      todos.forEach((todo) => {
        const todoItem = TodoCard(todo);
        if (todo.status === TodoStatusType.TODO) {
          todoList.innerHTML += todoItem;
        }
        if (todo.status === TodoStatusType.IN_PROGRESS) {
          inProgress.innerHTML += todoItem;
        }
        if (todo.status === TodoStatusType.DONE) {
          finish.innerHTML += todoItem;
        }
      });

      addEventListeners(todoList);
      addEventListeners(inProgress);
      addEventListeners(finish);
    }

    renderTodos();

    // Add Todo button logic
    const addTodoButtons = document.querySelectorAll("#add-todo");
    addTodoButtons.forEach((addTodoBtn) => {
      if (addTodoBtn) {
        addTodoBtn.addEventListener("click", () => {
          const columnName = addTodoBtn.parentElement?.parentElement?.className;
          if (columnName?.includes("todo")) {
            handleCreate(TodoStatusType.TODO);
          }
          if (columnName?.includes("in-progress")) {
            handleCreate(TodoStatusType.IN_PROGRESS);
          }
          if (columnName?.includes("todo-done")) {
            handleCreate(TodoStatusType.DONE);
          }
        });
      }
    });
    setInterval(() => {
      const todos = document.querySelectorAll(".todo-card");
      todos.forEach((todo) => {
        const parent = todo.parentElement;
        todo.addEventListener("dragend", () => {
          if (todo.parentElement !== parent) {
            changeStatus(todoContext, todo, todoService);
            renderTodos();
          }
        });
      });
    }, 10);
  });

  function changeStatus(
    todoContext: TodoContext,
    todo: Element,
    todoService: TodoService,
  ) {
    const listTodos = todoContext.getTodos();
    listTodos.forEach((todoItem) => {
      if (todoItem.id === todo.id) {
        if (todo.parentElement?.id === "todo-done") {
          todoService.toggleTodoStatus(todoItem.id, "done");
        }
        if (todo.parentElement?.id === "in-progress") {
          todoService.toggleTodoStatus(todoItem.id, "in-progress");
        }
        if (todo.parentElement?.id === "todo-add") {
          todoService.toggleTodoStatus(todoItem.id, "todo");
        }
      }
    });
  }
</script>

<script is:inline>
  // Drag and Drop
  function allowDrop(e) {
    e.preventDefault();
  }

  function drag(ev) {
    ev.dataTransfer.setData("text", ev.target.id);
  }

  function dropMe(e) {
    e.preventDefault();
    const data = e.dataTransfer.getData("text");
    const todo = document.getElementById(data);

    if (e.target.classList.contains("column-add")) {
      e.target.appendChild(todo);
    } else if (e.target.closest(".column-add")) {
      e.target.closest(".column-add").appendChild(todo);
    }
  }

  function noAllowDrop(ev) {
    ev.stopPropagation();
  }
</script>
