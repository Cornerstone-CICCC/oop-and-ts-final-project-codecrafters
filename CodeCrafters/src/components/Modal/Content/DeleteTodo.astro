---
import "@styles/style.css";
import { TodoFormType } from "@utils/todoFormType";
---

<form class="delete-form" id={TodoFormType.DELETE}>
  <input type="hidden" name="id" id="todo-id" />

  <div class="delete-form-body">
    <label class="delete-form-message"
      >Are you sure you want to delete this task?</label
    >
    <p id="todo-title" class="todo-title"></p>
  </div>

  <div class="delete-form-footer">
    <button type="reset" class="cancel-button">Cancel</button>
    <button type="submit" class="delete-button">Delete</button>
  </div>
</form>

<script>
  import { TodoService } from "@services/todoService";
  import type { Todo } from "src/types/todo";
  import { addEventListeners, TodoCard } from "@components/TodoCard";
  import { TodoFormType } from "@utils/todoFormType";
  import { TodoModalType } from "@utils/todoModalType";

  const todoService = new TodoService();
  const todoList = document.getElementById("todoList") as HTMLDivElement;

  const deleteTodo = async (event: SubmitEvent) => {
    event.preventDefault();
    const form = document.getElementById(
      TodoFormType.DELETE,
    ) as HTMLFormElement;
    const formData = new FormData(form);
    const id = formData.get("id") as string;

    const updatedTodos = todoService.deleteTodo(id);
    renderTodos(updatedTodos);

    closeModal();
    formReset();
  };

  const form = document.getElementById(TodoFormType.DELETE) as HTMLFormElement;
  form.addEventListener("submit", deleteTodo);

  const formReset = () => {
    const form = document.getElementById(
      TodoFormType.DELETE,
    ) as HTMLFormElement;
    form.reset();
  };

  const renderTodos = (todos: Todo[]) => {
    todoList.innerHTML = "";

    const todoElements = todos.map((todo) => TodoCard(todo)).join("");
    todoList.innerHTML = todoElements;

    addEventListeners(todoList);
  };

  const cancelButton = form.querySelector(
    ".cancel-button",
  ) as HTMLButtonElement;
  if (cancelButton) {
    cancelButton.addEventListener("click", () => {
      closeModal();
      formReset();
    });
  }

  const closeModal = () => {
    const modalControls = window.modalControls;
    if (!modalControls) return;
    modalControls[TodoModalType.DELETE].close();
  };
</script>
